/// บทเรียน
model Lesson {
    id                 Int     @id @default(autoincrement())
    lessonTypeId       Int     @map("lesson_type_id")
    courseId           Int     @map("course_id")
    name               String
    description        String?
    documentUrl        String? @map("document_url")
    sortOrder          Int     @map("sort_order")
    /// บทเรียนย่อย อ้างอิง lessonId
    parentId           Int?    @map("parent_id")

    isActive Boolean @default(true) @map("is_active")

    createdBy Int  @map("created_by")
    updatedBy Int? @map("updated_by")
    deletedBy Int? @map("deleted_by")

    createdAt DateTime  @default(now()) @map("created_at")
    updatedAt DateTime? @map("updated_at")
    deletedAt DateTime? @map("deleted_at")

    // Self-reference
    parent   Lesson?  @relation("LessonToParent", fields: [parentId], references: [id])
    children Lesson[] @relation("LessonToParent")

    // Relations
    lessonType       LessonType       @relation("LessonTypeId", fields: [lessonTypeId], references: [id])
    course           Course           @relation("CourseId", fields: [courseId], references: [id])

    createdByUser User  @relation("LessonCreatedByUser", fields: [createdBy], references: [id])
    updatedByUser User? @relation("LessonUpdatedByUser", fields: [updatedBy], references: [id])
    deletedByUser User? @relation("LessonDeletedByUser", fields: [deletedBy], references: [id])

    // Reverse relations
    lessonContents LessonContent[] @relation("lessonContentId")

    lessonViews LessonView[] @relation("LessonViewLessonId")

    lessonAttempt LessonAttempt[] @relation("LessonAttemptLessonId")

    lessonPrerequisite  LessonPrerequisite[] @relation("LessonPrerequisiteLessonId")
    lessonPrerequisites LessonPrerequisite[] @relation("LessonPrerequisiteRequiredLessonId")

    questionSets QuestionSet[] @relation("QuestionSetLessonId")
}
