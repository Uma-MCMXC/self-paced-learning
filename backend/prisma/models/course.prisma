model Course {
    id          Int     @id @default(autoincrement())
    categoryId  Int     @map("category_id")
    name        String
    description String?
    imageUrl    String  @map("image_url")
    /// ค่าใช้จ่าย
    fee         Int
    isActive    Boolean @default(true) @map("is_active")

    createdBy Int  @map("created_by")
    updatedBy Int? @map("updated_by")
    deletedBy Int? @map("deleted_by")

    createdAt DateTime  @default(now()) @map("created_at")
    updatedAt DateTime? @map("updated_at")
    deletedAt DateTime? @map("deleted_at")

    // Relations
    category Category @relation(fields: [categoryId], references: [id])

    createdByUser User  @relation("CourseCreatedByUser", fields: [createdBy], references: [id])
    updatedByUser User? @relation("CourseUpdatedByUser", fields: [updatedBy], references: [id])
    deletedByUser User? @relation("CourseDeletedByUser", fields: [deletedBy], references: [id])

    courseInstructorCourseId CourseInstructor[] @relation("CourseId")

    courseCompletionCourseId CourseCompletion[] @relation("CourseId")

    lessons Lesson[] @relation("CourseId")

    questionSets QuestionSet[] @relation("QuestionSetCourseId")
}
