import { PrismaClient } from '@prisma/client';
const prisma = new PrismaClient();

export async function seedOrganizations() {
  const creatorId = 1000; // system user

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ user id 1000 ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
  const systemUser = await prisma.user.findUnique({ where: { id: creatorId } });
  if (!systemUser) {
    console.error('‚ùå User ID 1000 (system) not found. Seed aborted.');
    return;
  }

  // üîÅ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ organization ‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
  const existingOrg = await prisma.organization.findFirst({
    where: { name: '‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡∏ó‡∏±‡∏Å‡∏©‡∏¥‡∏ì' },
  });

  if (existingOrg) {
    console.log('Organization already exists. Skipping...');
    return;
  }

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á Organization
  const organization = await prisma.organization.create({
    data: {
      name: '‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡∏ó‡∏±‡∏Å‡∏©‡∏¥‡∏ì',
      createdBy: creatorId,
      createdAt: new Date(),
      isActive: true,
    },
  });

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á Department ‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡∏Å‡∏±‡∏ö Organization
  await prisma.division.create({
    data: {
      name: '‡∏Ñ‡∏ì‡∏∞‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡πÅ‡∏•‡∏∞‡∏ô‡∏ß‡∏±‡∏ï‡∏Å‡∏£‡∏£‡∏°‡∏î‡∏¥‡∏à‡∏¥‡∏ó‡∏±‡∏•',
      organizationId: organization.id,
      createdAt: new Date(),
      isActive: true,
    },
  });

  console.log('Seed Organization and Division completed.');
}
