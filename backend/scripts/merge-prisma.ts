import * as fs from 'fs';
import * as path from 'path';

const baseDir = path.resolve(__dirname, '../prisma');
const modelDir = path.join(baseDir, 'models');
const schemaPath = path.join(baseDir, 'schema.prisma');

// Header: generator + datasource
const header = `// Auto-generated by merge-prisma.ts

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
`;

// รวม model ทั้งหมด
function mergeModels(): string {
  const files = fs.readdirSync(modelDir).filter((f) => f.endsWith('.prisma'));
  const merged = files.map((file) => {
    const content = fs.readFileSync(path.join(modelDir, file), 'utf-8');
    return `// --- ${file} ---\n\n${content.trim()}\n`;
  });
  return merged.join('\n\n');
}

// สร้าง schema.prisma ใหม่
function writeSchemaFile() {
  const mergedSchema = `${header}\n\n${mergeModels()}`;
  fs.writeFileSync(schemaPath, mergedSchema, 'utf-8');
  console.log(`✅ Merged ${schemaPath} successfully with models from /models`);
}

// Run
writeSchemaFile();

// ตัวอย่างคำสั่ง --> npx ts-node scripts/merge-prisma.ts
